org: amejia
app: aws-node-http-api
service: aws-node-http-api
frameworkVersion: '3'

custom:
  tableName: 'characters-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  region: 'us-east-1'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ CharactersTable, Arn ]
  environment:
    CHARACTERS_TABLE: ${self:custom.tableName}

resources:
  Resources:
    CharactersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: characterId
            AttributeType: N
        KeySchema:
          - AttributeName: characterId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

package:
  individually: true
  patterns:
    - '!./**'

functions:

  getCharacter:
    handler: src/functions/getCharacter/getCharacter.getCharacter
    events:
      - httpApi:
          path: /get-character/{characterId}
          method: get
    package:
      patterns:
        - src/functions/getCharacter/**

  saveCharacter:
    handler: src/functions/saveCharacter/saveCharacter.saveCharacter
    events:
      - httpApi:
          path: /save-character
          method: post
    package:
      patterns:
        - src/functions/saveCharacter/**

  getSavedCharacters:
    handler: src/functions/getSavedCharacters/getSavedCharacters.getSavedCharacters
    events:
      - httpApi:
          path: /get-saved-characters
          method: get
    package:
      patterns:
        - src/functions/getSavedCharacters/**